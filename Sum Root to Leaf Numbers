/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
/*long long sum=0;
void totalSum(TreeNode* A, int x)
{
    if(A==NULL)
    return;
    if(A->left==NULL && A->right==NULL)
    {
        sum= (sum+(x*10+A->val))%1003;
        return;
    }
    x=x*10+A->val;
    totalSum(A->left,x);
    totalSum(A->right,x);
}*/
void totalSum(TreeNode *A, int x, int &sum)
{
    if(A==NULL)
        return;
    else if(A->left==NULL && A->right==NULL)
    {
        
        int temp= (x*10)+A->val;
        sum = (sum+temp)%1003;
        return;
    }
    x= (x*10)+A->val;
    totalSum(A->left,x%1003,sum);
    totalSum(A->right,x%1003,sum);
    
}
int Solution::sumNumbers(TreeNode* A) {
    int sum=0;
    totalSum(A, 0, sum);
    return (sum%1003);
}

