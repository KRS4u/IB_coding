int Solution::maxProfit(const vector<int> &A) {
    
    int i,n=A.size();
    if(n==0 || n==1)
    return 0;
    int arr[n],brr[n];
    int mx=A[0],mn=A[0];
    arr[0]=0;
    for(i=1;i<n;++i)
    {
        mn=min(A[i],mn);
        arr[i]=max(arr[i-1],A[i]-mn);
    }
    brr[n-1]=0;
    mx=A[n-1];
    mn=A[n-1];
    for(i=n-2;i>=0;--i)
    {
       brr[i]=max(brr[i+1],mx-A[i+1]);
       mx=max(mx,A[i]);
    }
    int max1=INT_MIN;
    for(i=0;i<n;++i)
    max1=max(max1,arr[i]+brr[i]);
    return max1;
}
