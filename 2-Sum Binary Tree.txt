/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int Solution::t2Sum(TreeNode* A, int B) {
    stack<TreeNode *> s1,s2;
    bool done1=false,done2=false;
    int val1=0,val2=0;
    TreeNode *cur1=A,*cur2=A;
    while(1)
    {
        while(!done1)
        {
            if(cur1)
            {
                s1.push(cur1);
                cur1=cur1->left;
            }
            else
            {
                if(s1.empty())
                done1=true;
                else
                {
                    cur1=s1.top();
                    s1.pop();
                    val1=cur1->val;
                    cur1=cur1->right;
                    done1=true;
                }
            }
        }
        while(!done2)
        {
            if(cur2)
            {
                s2.push(cur2);
                cur2=cur2->right;
            }
            else
            {
                if(s2.empty())
                done2=true;
                else
                {
                    cur2=s2.top();
                    s2.pop();
                    val2=cur2->val;
                    cur2=cur2->left;
                    done2=true;
                }
            }
        }
        if(val1!=val2 && val1+val2==B)
        return 1;
        if(val1+val2<B)
        done1=false;
        else if(val1+val2>B)
        done2=false;
        if(val1>=val2)
        return 0;
    }
    
}
