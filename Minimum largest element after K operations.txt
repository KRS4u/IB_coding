class large
{
    public:
    int i,val;
    large(){}
    large(int i, int val): i(i), val(val){}
};
bool operator<(const large &l1, const large &l2)
{
    return (l1.i+l1.val)>(l2.i+l2.val);
}
int Solution::solve(vector<int> &A, int B) {
    priority_queue<large> p;
    int i,j,k;
    large l1;
    int x=INT_MIN;
    for(i=0;i<A.size();++i)
    {
        p.push(large(A[i],A[i]));
        if(A[i]>x)
        x=A[i];
    }
    for(i=0;i<B;++i)
    {
        l1=p.top();
        p.pop();
        p.push(large(l1.i,l1.i+l1.val));
        if(x<l1.i+l1.val)
        x=l1.i+l1.val;
       // cout<<l1.i<<" "<<l1.val<<" ";
    }
    
   return x;
}
