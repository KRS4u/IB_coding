unordered_map<int,int>mp;
int solve(string &A,int i)
{
    if(i<0)
    return 0;
    if(i==0 && A[i]!='0')
    {
        if(mp[0]==-1)
        {
            mp[0]=1;
        }
        return 1;
        
    }
    if(i==0 && A[i]=='0')
    {
        if(mp[0]==-1)
        {
            mp[0]=0;
        }
        return 0;
        
    }
    if(i==1)
    {
        string str="";
        if((A[1]=='0' && A[0]=='0')|| A[0]=='0')
        {
            if(mp[1]==-1)
            mp[1]=0;
            if(mp[0]==-1)
            mp[0]=0;
            return 0;
        }
        if(A[1]=='0')
        {
            str=str+A[0]+A[1];
            if(str>="10" && str<="26")
            {
                if(mp[1]==-1)
                mp[1]=1;
                 if(mp[0]==-1)
            mp[0]=1;
                return 1;
            }
            else
            {
                if(mp[1]==-1)
                mp[1]=0;
                if(mp[0]==-1)
            mp[0]=1;
                return 0;
            }
        }
        else
        {
            str=str+A[0]+A[1];
            if(str>="10" && str<="26")
            {
                if(mp[1]==-1)
                mp[1]=2;
                if(mp[0]==-1)
            mp[0]=1;
                return 2;
            }
            else
            {if(mp[1]==-1)
                mp[1]=1;
                 if(mp[0]==-1)
            mp[0]=1;
                return 1;
                
            }
            
            
        }
        
    }
    if(mp[i]==-1)
    {string str="";
    str=str+A[i-1]+A[i];
    if(A[i]=='0' && str>="10" && str<="26")
    {
        mp[i]=solve(A,i-2);
        return mp[i];
    }
    else if(A[i]=='0')
    {
        mp[i]=0;
        return 0;
    }
    else if(str>="10" && str<="26")
    {
        mp[i]=solve(A,i-1)+solve(A,i-2);
        return mp[i];
        
    }
    else
    {
        mp[i]=solve(A,i-1);
        return mp[i];
    }
    }
    return mp[i];
}
int Solution::numDecodings(string A) {
 int i,n=A.length();
 for(i=0;i<n;++i)
 mp[i]=-1;
 return solve(A,n-1);
 
}
