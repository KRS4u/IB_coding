string Solution::minWindow(string A, string B) {
    int len1=A.size(),len2=B.size();
    int i,j,k;
    if (len1<len2)
    return  "";
    int hp[256]={0};
    int hs[256]={0};
    for(i=0;i<len2;++i)
    hp[B[i]]++;
    int count=0,start=0,mlen=INT_MAX,index=-1;
    for(i=0;i<len1;++i)
    {
        ++hs[A[i]];
        if(hp[A[i]]!=0 && hs[A[i]]<=hp[A[i]])
        {
            ++count;
        }
        if(count==len2)
        {
            while(hs[A[start]]>hp[A[start]] || hp[A[start]]==0)
            {
                if(hs[A[start]]>hp[A[start]])
                hs[A[start]]--;
                start++;
            }
            int lenwindow=i-start+1;
            if(mlen>lenwindow)
            {
                mlen=lenwindow;
                index=start;
            }
        }
    }
    if(index==-1)
    return "";
    else
    return A.substr(index,mlen);
    
}
