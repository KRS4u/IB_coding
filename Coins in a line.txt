vector<vector<int>>arr;
int n;
int solve(vector<int>&A, int i, int j)
{
    if(i>j)
    return 0;
    if(i==j)
    arr[i][j]=A[i];
    if(j==i+1)
    arr[i][j]=max(A[i],A[j]);
    if(arr[i][j]!=-1)
    return arr[i][j];
    else
    {
     arr[i][j]= max(A[i]+min(solve(A,i+2,j),solve(A,i+1,j-1)), A[j]+min(solve(A,i,j-2),solve(A,i+1,j-1)));
     return arr[i][j];
    }
}
int Solution::maxcoin(vector<int> &A) {
    arr.clear();
    int i,j;
    n=A.size();
    if(n==0)
    return 0;
    for(i=0;i<n;++i)
    {
        vector<int>brr(n,-1);
        arr.push_back(brr);
    }
    return solve(A,0,n-1);
}
