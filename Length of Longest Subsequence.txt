int Solution::longestSubsequenceLength(const vector<int> &A) {
    if(A.size()==0)
    return 0;
    int n=A.size(),arr[n],i,j,k;
    arr[0]=1;
    for(i=1;i<n;++i)
    {
        arr[i]=1;
        for(j=0;j<i;++j)
        {
            if(A[i]>A[j])
            {
                arr[i]=max(arr[i],arr[j]+1);
            }
        }
    }
    int brr[n];
    brr[n-1]=0;
    for(i=n-1;i>=0;--i)
    {
        brr[i]=0;
        for(j=n-1;j>i;--j)
        {
            if(A[i]>A[j])
            {
                brr[i]=max(brr[i],brr[j]+1);
            }
        }
    }
    int mx=INT_MIN;
    for(i=0;i<n;++i)
    mx=max(mx,arr[i]+brr[i]);
    return mx;
}
